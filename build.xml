<?xml version="1.0" encoding="UTF-8" ?>

<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

(OLD USAGE INSTRUCTIONS. No longer valid. Just run the defalt target now. See first entry in Notes.)
XX: USAGE: ant [-Dbundles=(image | dmg | pkg | installer | all)] [-Dcleanbuild=<anyvalue>]

XX: image (default):	Build a .app bundle
XX: dmg:				Build a .dmg file containing the .app bundle
XX: pkg:				Build a .pkg executable that installs the .app bundle
XX: installer:			Build a .dmg and a .pkg file
XX: all:				Build all of the above, plus launchable jar file. The
					pkg build will not succeed with this option
					
XX: Property cleanbuild will cause the build directory to be deleted.

XX: Build products can be found in build/.

Notes:

- The build has been modified to no longer build the MacOS app bundle, as the javafx task recently
  began fialing with an error that is not readily resolvable. The previous "default" task was renamed
  "default_old". The current default task copies a static version of the app bundle to the dist dir,
  builds a jar file from the curent source, and copies this jar file to the app bundle in the dist dir.
  The app bundle is ignored by git. Therefore, before building, copy the existing app bundle to
  PeriMeleom.app in the project root directory.

- A task which detects the JDK version was commented out, as itwas needed only for the javafx build. This
  task runs an exdecutable available on MacOS. With this task removed, the build can be run on other OSs.

- Hard-coded references in the code to a location in "/Library/Application Support" were changed to relative
  references in directory "resource". There are two files in this directory that seem to needed. Classpath
  entries for them were added to the jar manifest file. The "resource" directory must be included in the app
  bundle in the same directory where the "library" folder and "members.jar" currently reside. If some of the
  other files in the "resource" directory turn out be needed, we just have to add entries for them in
  MANIFEST.MF.

- (OBE comment, relevant only for the javafx build): Java 10 is required, because:
	* Java 8 does not have java.desktop classes.	
	* Java 9 is beyond End of Life.
	* In the Java 11 JDK, the ant-javafx.jar file which provides the ant tasks is not currently available.
  
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
 
<project name="PeriMelon Application" default="default" basedir="."
  xmlns:fx="javafx:com.sun.javafx.tools.ant">
 
	<property name="app_version" value="1.4.2" />
	<property name="lib" location="lib" />
	<property name="resource" location="resource" />
  	<property name="build.src.dir" value="src"/>
  	<property name="build.classes.dir" value="classes"/>
	<property name="jdk.version" value="10" />
  	<property name="build.dist.dir" value="dist"/>
	<property name="build.out.dir" value="build"/>
	<property name="app.src.template.dir" value="PeriMeleon.app" />
	<property name="dist.app.bundle.dir" value="${build.dist.dir}/PeriMeleon.app" />
	<property name="app.bundle.jar.path" value="${dist.app.bundle.dir}/Contents/Java/members.jar" />
	<property name="default.native.bundles" value="image" />
	<property environment="env" />
	<property name="JAVA_HOME" value="${env.JAVA_HOME}" />
	
	<!--This task runs a MacOS executable to check the JDK version. It's no longer required.-->
	<!-- <exec executable="/usr/libexec/java_home" outputproperty="JAVA_HOME" resultproperty="exec.result">
		<arg line="-v ${jdk.version} -F" />
	</exec>
	<fail message="This script requires JDK version ${jdk.version}, and it is not installed">
		<condition>
			<isfailure code="${exec.result}" />
		</condition>
	</fail>
	
	<echo message="JAVA HOME: ${JAVA_HOME}" />
	-->

  	<path id="app.classpath">
		<fileset dir="${lib}">
			<include name="*.jar" />
			<include name="*.txt" />
		</fileset>
		<fileset dir="${resource}">
			<include name="*.*" />
		</fileset>
		<pathelement path="classes"/>
  	</path>
	
	<!-->
	<condition property="native.bundles" value="${bundles}" else="${default.native.bundles}">
			<isset property="bundles" />
	</condition> -->
 
 <!-- Javafx task which builds an app bundle. No longer works.-->
  <target name="default_old" depends="clean,compile">
 
    <taskdef resource="com/sun/javafx/tools/ant/antlib.xml"
      uri="javafx:com.sun.javafx.tools.ant"
      classpath=".:./package/macosx:${JAVA_HOME}:${JAVA_HOME}/lib/ant-javafx.jar"/>
 
	 <fx:application id="perimeleon"
	    name="Peri Meleon"
		version="${app_version}"
	    mainClass="com.tamelea.pm.PeriMeleon" />
 
     <fx:resources id="appRes">
        <fx:fileset dir="${build.dist.dir}" includes="members.jar"/>
	 	<fx:fileset dir="." type="jar" includes="lib/*.jar" />
        <fx:fileset dir="." type="data" includes="lib/*.txt" />
     </fx:resources>
 
  	<fx:jar destfile="${build.dist.dir}/members.jar" >
    	<fx:application refid="perimeleon"/>
  		<fx:resources refid="appRes" />
  		<fx:fileset dir="${build.classes.dir}"/>
  	</fx:jar>
 
  	<fx:deploy outdir="${basedir}/${build.out.dir}"
        verbose="false"
  	    embedjnlp="false"
	    outfile="permimeleon"
  		signBundle="true"
	    nativeBundles="${native.bundles}">
	    <fx:platform j2se="${jdk.version}"/>
	    <fx:application refId="perimeleon"/>
		<fx:resources refId="appRes" />
	    <fx:info title="Peri Meleon" />
  		<fx:bundleArgument arg="mac.signing-key-developer-id-installer" value="Developer ID Installer: TyndaleSoft LLC (7LKQP3MSCV)"/>
  		<fx:bundleargument arg="mac.signing-key-developer-id-app" value="Developer ID Application: TyndaleSoft LLC (7LKQP3MSCV)" />
  	</fx:deploy>
 
  </target>
	
	<target name="clean-build-dir" if="${cleanbuild}">
		<delete includeemptydirs="true" removeNotFollowedSymlinks="true">
			<!-- TIL that MacOS app bundles are impervious to ant delete tasks -->
			<fileset dir="${build.out.dir}" includes="**/*"/>
		</delete>
	</target>
 
  <target name="clean" depends="clean-build-dir">
    <mkdir dir="${build.classes.dir}"/>
    <mkdir dir="${build.dist.dir}"/>
  	<mkdir dir="${build.out.dir}"/>
 
    <delete includeemptydirs="true" removeNotFollowedSymlinks="true">
      	<fileset dir="${build.classes.dir}" includes="**/*"/>
      	<fileset dir="${build.dist.dir}" includes="**/*"/>
    </delete>
  	
  </target>
 
  <target name="compile" depends="clean">
 
 <!--JDK 10 is currently embeded in the app. The release attribute must match that.-->
    <javac includeantruntime="false"
      srcdir="${build.src.dir}"
      destdir="${build.classes.dir}"
      fork="yes"
      executable="${JAVA_HOME}/bin/javac"
	  release="10"
	  classpathref="app.classpath"
      debug="on">
    </javac>
  	
  	<copy todir="${build.classes.dir}">
		<fileset dir="${build.src.dir}">
			<include name="com/**/*" />
			<include name="help/**/*" />
			<exclude name="**/.svn/*" />
			<exclude name="**/*.java" />
		</fileset>
	</copy>
    
  </target>

  <target name="copyAppTemplate" depends="compile">
	<copy todir="${dist.app.bundle.dir}">
		<fileset dir="${app.src.template.dir}">
			<include name="**/*" />
		</fileset>
	</copy>
	
  </target>

  <target name="default" depends="copyAppTemplate">
  	<chmod file="${dist.app.bundle.dir}/Contents/MacOS/Peri Meleon" perm="+x" />
	<jar destfile="${app.bundle.jar.path}" manifest="./MANIFEST.MF" >
  		<fileset dir="${build.classes.dir}"/>
  	</jar>
  </target>
 
</project>
