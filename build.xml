<?xml version="1.0" encoding="UTF-8" ?>

<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

USAGE: ant [-Dbundles=(image | dmg | pkg | installer | all)] [-Dcleanbuild=<anyvalue>]

image (default):	Build a .app bundle
dmg:				Build a .dmg file containing the .app bundle
pkg:				Build a .pkg executable that installs the .app bundle
installer:			Build a .dmg and a .pkg file
all:				Build all of the above, plus launchable jar file. The
					pkg build will not succeed with this option
					
Property cleanbuild will cause the build directory to be deleted.

Build products can be found in build/.

Notes:

- Java 10 is required, because:
	* Java 8 does not have java.desktop classes.	
	* Java 9 is beyond End of Life.
	* In the Java 11 JDK, the ant-javafx.jar file which provides the ant tasks is not currently available.
  
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
 
<project name="PeriMelon Application" default="default" basedir="."
  xmlns:fx="javafx:com.sun.javafx.tools.ant">
 
	<property name="app_version" value="1.4.2" />
	<property name="lib" location="lib" />
  	<property name="build.src.dir" value="src"/>
  	<property name="build.classes.dir" value="classes"/>
	<property name="jdk.version" value="10" />
  	<property name="build.dist.dir" value="dist"/>
	<property name="build.out.dir" value="build"/>
	<property name="default.native.bundles" value="image" />
	
	<exec executable="/usr/libexec/java_home" outputproperty="JAVA_HOME" resultproperty="exec.result">
		<arg line="-v ${jdk.version} -F" />
	</exec>
	<fail message="This script requires JDK version ${jdk.version}, and it is not installed">
		<condition>
			<isfailure code="${exec.result}" />
		</condition>
	</fail>
	
	<echo message="JAVA HOME: ${JAVA_HOME}" />

  	<path id="app.classpath">
		<fileset dir="${lib}">
			<include name="*.jar" />
			<include name="*.txt" />
		</fileset>
		<pathelement path="classes"/>
  	</path>
	
	<condition property="native.bundles" value="${bundles}" else="${default.native.bundles}">
			<isset property="bundles" />
	</condition>
 
  <target name="default" depends="clean,compile">
 
    <taskdef resource="com/sun/javafx/tools/ant/antlib.xml"
      uri="javafx:com.sun.javafx.tools.ant"
      classpath=".:./package/macosx:${JAVA_HOME}:${JAVA_HOME}/lib/ant-javafx.jar"/>
 
	 <fx:application id="perimeleon"
	    name="Peri Meleon"
		version="${app_version}"
	    mainClass="com.tamelea.pm.PeriMeleon" />
 
     <fx:resources id="appRes">
        <fx:fileset dir="${build.dist.dir}" includes="members.jar"/>
	 	<fx:fileset dir="." type="jar" includes="lib/*.jar" />
        <fx:fileset dir="." type="data" includes="lib/*.txt" />
     </fx:resources>
 
  	<fx:jar destfile="${build.dist.dir}/members.jar" >
    	<fx:application refid="perimeleon"/>
  		<fx:resources refid="appRes" />
  		<fx:fileset dir="${build.classes.dir}"/>
  	</fx:jar>
 
  	<fx:deploy outdir="${basedir}/${build.out.dir}"
        verbose="false"
  	    embedjnlp="false"
	    outfile="permimeleon"
  		signBundle="true"
	    nativeBundles="${native.bundles}">
	    <fx:platform j2se="${jdk.version}"/>
	    <fx:application refId="perimeleon"/>
		<fx:resources refId="appRes" />
	    <fx:info title="Peri Meleon" />
  		<fx:bundleArgument arg="mac.signing-key-developer-id-app" value="iPhone Distribution: TyndaleSoft LLC (7LKQP3MSCV)"/>
   </fx:deploy>
 
  </target>
	
	<target name="clean-build-dir" if="${cleanbuild}">
		<delete includeemptydirs="true" removeNotFollowedSymlinks="true">
			<!-- TIL that MacOS app bundles are impervious to ant delete tasks -->
			<fileset dir="${build.out.dir}" includes="**/*"/>
		</delete>
	</target>
 
  <target name="clean" depends="clean-build-dir">
    <mkdir dir="${build.classes.dir}"/>
    <mkdir dir="${build.dist.dir}"/>
  	<mkdir dir="${build.out.dir}"/>
 
    <delete includeemptydirs="true" removeNotFollowedSymlinks="true">
      	<fileset dir="${build.classes.dir}" includes="**/*"/>
      	<fileset dir="${build.dist.dir}" includes="**/*"/>
    </delete>
  	
  </target>
 
  <target name="compile" depends="clean">
 
    <javac includeantruntime="false"
      includeJavaRuntime="true"
      srcdir="${build.src.dir}"
      destdir="${build.classes.dir}"
      fork="yes"
      executable="${JAVA_HOME}/bin/javac"
      source="${jdk.version}"
      debug="on"
      classpathref="app.classpath">
    </javac>
  	
  	<copy todir="${build.classes.dir}">
		<fileset dir="${build.src.dir}">
			<include name="com/**/*" />
			<include name="help/**/*" />
			<exclude name="**/.svn/*" />
			<exclude name="**/*.java" />
		</fileset>
	</copy>
    
  </target>
 
</project>
